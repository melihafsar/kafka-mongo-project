apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert -c
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: connect
  name: connect
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: connect
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.yml convert -c
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/mongodb-kafka-base-mongo-kafka-localnet: "true"
        io.kompose.service: connect
    spec:
      containers:
        - env:
            - name: CONNECT_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: broker:29092
            - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: docker-connect-configs
            - name: CONNECT_CONNECTIONS_MAX_IDLE_MS
              value: "180000"
            - name: CONNECT_GROUP_ID
              value: connect-cluster-group
            - name: CONNECT_KEY_CONVERTER
              value: org.apache.kafka.connect.json.JsonConverter
            - name: CONNECT_METADATA_MAX_AGE_MS
              value: "180000"
            - name: CONNECT_OFFSET_FLUSH_INTERVAL_MS
              value: "10000"
            - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: docker-connect-offsets
            - name: CONNECT_PLUGIN_PATH
              value: /usr/share/java,/usr/share/confluent-hub-components
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              value: connect
            - name: CONNECT_REST_PORT
              value: "8083"
            - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: docker-connect-status
            - name: CONNECT_VALUE_CONVERTER
              value: org.apache.kafka.connect.json.JsonConverter
            - name: CONNECT_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_JMX_HOSTNAME
              value: localhost
            - name: KAFKA_JMX_PORT
              value: "35000"
          image: connect
          name: connect
          ports:
            - containerPort: 35000
          resources: {}
      hostname: connect
      restartPolicy: Always
status: {}
